#importing the libraries
import pandas as pd
import matplotlib.pyplot as plt
from sklearn.linear_model import Perceptron
from sklearn.model_selection import train_test_split
from sklearn.metrics import confusion_matrix
from sklearn.ensemble import RandomForestClassifier
from sklearn.metrics import multilabel_confusion_matrix
from sklearn.feature_selection import SelectKBest
from sklearn.metrics import classification_report
from sklearn import metrics
from sklearn.preprocessing import StandardScaler

#importing our cancer dataset
dataset = pd.read_csv(r'C:\Users\jjadd\Desktop\Python\data.csv')
#X = dataset.iloc[:, 1:31].values
#Y = dataset.iloc[:, 1].values
#print(Y)
#print(X)
#print(dataset)

#unnamed 32 is not essential so dropping it
dataset = dataset.drop(['id'], axis=1)
#dataset.head()

#print(dataset['diagnosis'].value_counts())

dataset['diagnosis']= dataset['diagnosis'].replace('M', 1)
dataset['diagnosis']= dataset['diagnosis'].replace('B', 0)
X = dataset.iloc[:, 1:30].values
Y = dataset.iloc[:, 0].values
#print(X)
#print(Y)
#print(dataset)

#x = dataset.drop(['diagnosis'], axis=1)
#y = dataset['diagnosis']
#print(x.shape, y.shape)


# Splitting the dataset into the Training set and Test set
X_train, X_test, Y_train, Y_test = train_test_split(X, Y, test_size = 0.25, random_state = 30)

#Feature Scaling
scaler = StandardScaler()
X_test = scaler.fit_transform(X_test)
X_train = scaler.transform(X_train)


#Fitting Random Forest Classification Algorithm
classifier = RandomForestClassifier(n_estimators = 10, criterion = 'entropy', random_state = 0)
classifier.fit(X_train, Y_train)

#predicting the Test set results
Y_pred = classifier.predict(X_test)
print(Y_pred)

#Creating the confusion Matrix
cm = confusion_matrix(Y_test, Y_pred)
print(Y_test)
print(cm)
